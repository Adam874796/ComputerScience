L1: 
def addM(M1, M2):
    w = len(M1)
    AT = [[0] * w for _ in range(w)]  
    for i in range(len(M1)):
        for j in range(len(M1)):
            AT[i][j] = M1[i][j] + M2[i][j]
    return AT


def isMagic(M):
    size = len(M) 
    magic_sum = sum(M[0]) 

    for row in M:
        if sum(row) != magic_sum:
            return False

        for col in range(size):
            if sum(M[row][col] for row in range(size)) != magic_sum:
                return False

    if sum(M[i][i] for i in range(size)) != magic_sum:
        return False

    if sum(M[i][size - 1 - i] for i in range(size)) != magic_sum:
        return False

    return True


def make5x5(M, shift):
    M1 = []
    M2 = []
    M3 = []
    M4 = []
    for n in range(len(M)):
        y = ((n - shift) % 5)
        M1.append(M[y])
    for n in range(len(M)):
        y = ((n - (shift * 2)) % 5)
        M2.append(M[y])
    for n in range(len(M)):
        y = ((n - (shift * 3)) % 5)
        M3.append(M[y])
    for n in range(len(M)):
        y = ((n - (shift * 4)) % 5)
        M4.append(M[y])
    M = [M, M1, M2, M3, M4]
    return M


a1 = [5, 1, 4, 2, 3]  # the first row of matrix A
b1 = [15, 20, 0, 10, 5]  # the first row of matrix B

if isMagic(addM(make5x5(a1, 2), make5x5(b1, 3))):
    print("the arrays create a magic square")
else:
    print("The arrays do not creat a magic square")

L2: 
Q = [[0.5, 1.4, 1], [1, 2, 0.5]]
P = [2.20, 3.10, 2.60]

person_1_total = Q[0][0] * P[0] + Q[0][1] * P[1] + Q[0][2] * P[2]
person_2_total = Q[1][0] * P[0] + Q[1][1] * P[1] + Q[1][2] * P[2]

print(f"Person 1 spent $%.2f" % person_1_total)
print(f"Person 2 spent $%.2f" % person_2_total)

L3: 
def mmult(P, Q):
    i = 0
    C = [0, 0]
    while i < 14:
        C[0] = (P[0] * Q[0][0]) + (P[1] * Q[1][0])
        C[1] = (P[0] * Q[0][1]) + (P[1] * Q[1][1])
        i = i + 1
    return C

A = [.6, .4] # prob. Marla is late today
B = [[.7, .3],
     [.9, .1]] # conditional prob. model for Marla's punctuality tomorrow

C = mmult(A, B)
print("On day 1, the probability that Marla will be early the next day is: ", C[0])
print("On day 1, the probability that Marla will be late the next day is: ", C[1])

days = 15
for i in range(2, days):
    C = mmult(C, B)
    print("On day %d, the prob. Marla is early the next day is: %.4f" % (i, C[0]) )
    print("On day %d, the prob. Marla is late the next day is: %.4f" % (i, C[1]) )
